#+Title:  How to Setup CentOS as a Deployment Platform and How to Deploy a Lab
#+Author: Khushpreet Kaur
#+Date:   [2015-07-09 Thurs]

#+SETUPFILE: ./org-templates/level-0.org
#+LINK_HOME: ./index.html
#+LINK_UP:   ./index.html

#+OPTIONS: LaTeX:t          Do the right thing automatically (MathJax)

#+PROPERTY: results output
#+PROPERTY: tangle no
#+PROPERTY: exports code
#+PROPERTY: eval no

* Objective

The objective of these instructions is to set up the =Centos= on your
machine as a virtual lab deployment platform.

* Prerequisites

** Your machine has CentOS version =6.5= or greater running on it. 

You can know that by typing
#+BEGIN_example
cat /etc/issue
#+END_example

The output should be 
#+BEGIN_EXAMPLE
CentOS release 6.5 (Final)
#+END_EXAMPLE

** Your machine has a 64 bit architecture

To find out, type
#+BEGIN_example
grep flags /proc/cpuinfo
#+END_example


The output should include the word "lm" (for long mode, indicating 64
bit) as one of the flags.

#+BEGIN_EXAMPLE
flags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov
pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe nx rdtscp *lm*
constant_tsc arch_perfmon pebs bts xtopology nonstop_tsc aperfmperf
pni dtes64 monitor ds_cpl vmx est tm2 ssse3 cx16 xtpr pdcm pcid sse4_1
sse4_2 popcnt lahf_lm arat dtherm tpr_shadow vnmi flexpriority ept
vpid
#+END_EXAMPLE

** You are on the Internet

The installation pulls packages from open repositories and you will need
an Internet connection to run the scripts successfully. 

** You have sudo permissions as root
The scripts install software using yum - a package management
utility - which can run only in sudo root mode.  Therefore, invoke the
script with a =sudo= command.  Be careful!  Reckless execution of
commands with root permission could make your machine inoperable!

* Instructions for installation
** Changing to the right directory

Please use the structure of the LIK, and change directory to =lik-release-0.5.0/ovpl-kit/scripts= 

#+BEGIN_EXAMPLE
cd lik-release-0.5.0/ovpl-kit/scripts
#+END_EXAMPLE

** Edit the configurations to set proxy
   Edit =config.sh= to set up proxies
#+BEGIN_EXAMPLE
cd scripts
vim config.sh
#+END_EXAMPLE

Edit the config file to set the =http_proxy= and =https_proxy= fields.
If there are no proxies to be set, leave the fields unchanged.
The snippet below shows how to set proxies.

   + To set the proxies.
#+begin_src example
    "ENVIRONMENT": {
        "HTTP_PROXY":"http://proxy. vlabs.ac.in:8080",
        "HTTPS_PROXY":"http://proxy.vlabs.ac.in:8080"
    },
#+end_src

   + if no proxies are used, 
#+begin_src example
    "ENVIRONMENT": {
        "HTTP_PROXY":"",
        "HTTPS_PROXY":""
    },
#+end_src

** Get the =openVZ= template

=cd= to the =meta= directory.  Download the  openVZ template OS:
#+begin_example
cd ../meta  
wget community.virtual-labs.ac.in/downloads/ubuntu-12.04-custom-x86_64.tar.gz
#+end_example

** Run the script to prepare centos
#+BEGIN_EXAMPLE
cd ../scripts
sudo root  ./centos_prepare_ovpl.sh
#+END_EXAMPLE

  
** Other Configurations specific to ADS (Auto Deployment Service)
Edit the file =ovpl/config/config.json= and execute the following steps, to
configure and then run ADS as a service:

  + To set the proxies.
#+begin_src example
    "ENVIRONMENT": {
        "HTTP_PROXY":"http://proxy. vlabs.ac.in:8080",
        "HTTPS_PROXY":"http://proxy.vlabs.ac.in:8080"
    },
#+end_src

  + if no proxies are used, 
#+begin_src example
    "ENVIRONMENT": {
        "HTTP_PROXY":"",
        "HTTPS_PROXY":""
    },
#+end_src

  + Set the SERVER_IP in LOGSERVER_CONFIGURATION to the IP address of the
machine on which the ADS services are running.
#+begin_src example
"LOGSERVER_CONFIGURATION": {
            "SERVER_IP": "ads-server-private-ip",
	    },
#+end_src

  + Set the COOKIE_SECRET value in CONTROLLER_CONFIG to some long randomly
    generated string.

#+begin_src example
"COOKIE_SECRET": "<generate a long random UUID>",
#+end_src

  + Leave the PERSONA_VERIFIER field as it is, if you are using the Mozilla's
    default Persona provider service.

  + Change APP_URL field and put the URL where the application is hosted.
#+begin_src example
     "APP_URL": "http://ads-server-public-ip:8080",
#+end_src

  + Copy =config/sample_authorized_users.py= to =config/authorized_users.py=,
    and add actual email addresses of authorized users.

** Choose ADAPTER_NAME
   In the ADAPTER section, change the ADAPTER_NAME to "CentOSVZAdapter".

#+begin_src example
"ADAPTER": {
        "ADAPTER_NAME" :"CentOSVZAdapter",
	}
#+end_src

*** Settings for CentOSVZAdapter
   Edit the file =ovpl/src/adapters/settings.py= to set
   the following:

   1. If the services are running on the base machine,
      set ADS_ON_CONTAINER to False.

   2. If the services are running on a container,
      set ADS_ON_CONTAINER to True.

   3. Set BASE_IP_ADDRESS = "root@<IP>" where IP is the ip address of
      base machine on which containers are created.

   4. Set ADS_SERVER_VM_ID to CTID of container running ADS.
      ADS_SERVER_VM_ID = "<CTID>" 

   5. SUBNET field to match with the subnet of your base machine
      If the ip address of your base machine is 10.2.58.XXX, 
      SUBNET = ["10.2.58.12/28"]

** Commands to Manage the Service
+ As root, go into =src= directory and run make to start ADS:
#+begin_src example
$ cd /ovpl/src
$ make
#+end_src

+ To stop the services, or restart
#+begin_src example
$ cd src
$ make stop-server
$ make restart-server
#+end_src

+ View the logs at /root/logs/ovpl.log by
#+begin_src example
tail -f /root/logs/ovpl.log
#+end_src

* Deploy a Lab

At this point, ADS is running and you are ready to deploy a lab.

- To deploy your lab ::
     - Open the browser.
     - Enter =localhost:8080= as the url.
     - The form requires you to fill =Lab ID=. You may assign any new alphanumeric name as a lab id.
     - Also, fill in the =Repo url= with the url of the lab sources on github repository.
     - Click =submit= to deploy your lab.
     - If the deployment is successful, an =IP address= will appear in the same browser window.
     - Enter the =IP address= in the address bar to view the newly deployed lab.






